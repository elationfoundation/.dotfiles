#+TITLE: Helm Custom Prompts
#+AUTHOR: seamus tuohy
#+EMAIL: stuohy@internews.org
#+DATE: 2015 Jul 21
#+TAGS:

** Contacts
*** Helm Search for contacts
This searches the org-contacts file and returns the name of the contact.
#+BEGIN_SRC emacs-lisp
    (defun org-projects-helm-get-contacts ()
      (org-map-entries '(let ((email (org-entry-get (point) "EMAIL"))
                              (name (nth 4 (org-heading-components))))
                          (cons (concat name " ( " email " ) ") name)) t org-contacts-files))

      (setq org-projects-helm-contacts-source
              `((name . "Helm capture for Org-Contacts")
                (candidates . org-projects-helm-get-contacts)
                (action . (lambda (candidate)
                            (mapconcat 'identity (helm-marked-candidates) ", ")))))

      (defun helm-prompt-for-current-org-contact ()
            (interactive)
            (helm :sources '(org-projects-helm-contacts-source)))
#+END_SRC
*** TODO Contacts tagged with projects and teams that they are involved in
*** TODO contacts with "encrypt" category force encryption of messages sent to them

* Technical Artifacts

  Make sure that we can simply =require= this library.

#+BEGIN_SRC elisp
  (provide 'helm-custom-prompts)
#+END_SRC

  Before you can build this on a new system, make sure that you put
  the cursor over any of these properties, and hit: =C-c C-c=

#+DESCRIPTION:
#+PROPERTY:    results silent
#+PROPERTY:    tangle ~/.emacs.d/elisp/helm-custom-prompts.el
#+PROPERTY:    eval no-export
#+PROPERTY:    comments org
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
